---
id: hdgalaktik
name: HDGalaKtik
description: "HDGalaKtik is a RUSSIAN Semi-Private tracker for MOVIES / TV / GENERAL"
language: ru-RU
type: semi-private
encoding: UTF-8
certificates:
  - 53262db5c4e32667ae158fcc90396d5675d4ec3a   # CN=mail.trackerpmr.com
links:
  - https://www.trackerpmr.com/
  - https://freetmd.com/
  - https://kinoradiomagia.tv/
legacylinks:
  - https://hdgalaktik.com/

caps:
  categorymappings:
    - {id: 13, cat: Movies, desc: "Фильмы (Movies)"}
    - {id: 6, cat: TV, desc: "Мультфильмы (Cartoons)"}
    - {id: 10, cat: Audio, desc: "Музыка (Music)"}
    - {id: 26, cat: PC, desc: "Программы (Programs)"}
    - {id: 5, cat: Console, desc: "Игры (Games)"}
    - {id: 25, cat: Other, desc: "Картинки (Pictures)"}
    - {id: 11, cat: TV, desc: "Сериалы (TV Series)"}
    - {id: 12, cat: TV/Anime, desc: "Аниме (Anime)"}
    - {id: 16, cat: Books, desc: "Книги (Books)"}
    - {id: 18, cat: Audio/Video, desc: "Клипы / Ролики (Clips / Trailers)"}
    - {id: 22, cat: TV, desc: "ТВ / Передачи (TV)"}
    - {id: 27, cat: PC/Mobile-Other, desc: "Игры - Мобила / КПК (Mobile)"}
    - {id: 1, cat: PC/ISO, desc: "Образы (ISO)"}
    - {id: 4, cat: Other, desc: "Другое (Other)"}

  modes:
    search: [q]
    tv-search: [q, season, ep]
    movie-search: [q]
    music-search: [q]
    book-search: [q]

settings:
  - name: cookie
    type: text
    label: Cookie
  - name: info_cookie
    type: info_cookie
  - name: stripcyrillic
    type: checkbox
    label: Strip Cyrillic Letters
    default: false
  - name: addrussiantotitle
    type: checkbox
    label: Add RUS to end of all titles to improve language detection by Sonarr and Radarr. Will cause English-only results to be misidentified.
    default: false
  - name: freeleech
    type: checkbox
    label: Search freeleech only
    default: false
  - name: sort
    type: select
    label: Sort requested from site
    default: 4
    options:
      4: created
      1: title
      5: size
      8: seeders
  - name: type
    type: select
    label: Order requested from site
    default: desc
    options:
      desc: desc
      asc: asc
  - name: info_tpp
    type: info
    label: Results Per Page
    default: For best results, change the <b>Torrents per page:</b> setting to <b>100</b> on your account profile.

login:
  # using the cookie method because the site expects a single session only, so using browser and Jackett can cause a lockout
  method: cookie
  inputs:
    cookie: "{{ .Config.cookie }}"
  test:
    path: /
    selector: a[href="mybonus.php"]

search:
  # https://www.trackerpmr.com/browse.php?search=&stype=0&s=0&cat=0&gr=0&kp=0&im=0&incldead=1&sort=0&type=desc
  paths:
    - path: browse.php
  inputs:
    $raw: "{{ range .Categories }}c{{.}}=1&{{end}}"
    search: "{{ .Keywords }}"
    # 0 title, 1 descr, 2 filename, 4 infohash
    stype: 0
    # 0 AND 1 OR
    s: 0
    # release group
    gr: 0
    # ratings
    kp: 0
    # 1 active, 2 dead, 3 gold, 4 sticky, lots of others
    incldead: "{{ if .Config.freeleech }}3{{ else }}1{{ end }}"
    sort: "{{ .Config.sort }}"
    type: "{{ .Config.type }}"

  keywordsfilters:
    - name: re_replace # S01 to сезон 1
      args: ["(?i)\\bS0*(\\d+)\\b", "сезон $1"]
    - name: re_replace # E02 to сери 1
      args: ["(?i)\\bE0*(\\d+)\\b", "сери $1"]
    - name: re_replace # S01E02 to сезон 1 сери 2
      args: ["(?i)\\bS0*(\\d+)E0*(\\d+)\\b", "сезон $1 сери $2"]
    - name: re_replace # replace special characters with "%" (wildcard)
      args: ["[^a-zA-Z0-9]+", "%"]

  rows:
    selector: table.table > tbody > tr.torcontduo

  fields:
    category:
      selector: a[href^="browse.php?cat="]
      attribute: href
      optional: true
      default: 4
      filters:
        - name: querystring
          args: cat
    title:
      selector: a[href^="details.php?id="]
      attribute: title
      filters:
        - name: regexp
          args: \'>(.+?)</div
        - name: htmldecode
        # normalize to SXXEYY format
        - name: re_replace
          args: ["(?i)[CС]езоны?[\\s:]*(\\d+(?:-\\d+)?).+?(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))[\\s:]*(\\d+(?:-\\d+)?)\\s*из\\s*(\\w?)", "S$1E$2 of $3"]
        - name: re_replace
          args: ["(?i)(\\d+(?:-\\d+)?)\\s*[CС]езоны?.+?(\\d+(?:-\\d+)?)\\s*из\\s*(\\w?)(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))?", "S$1E$2 of $3"]
        - name: re_replace
          args: ["(?i)(\\d+(?:-\\d+)?)\\s*[CС]езоны?.+?(\\d+(?:-\\d+)?)\\s*(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))\\s+из\\s*(\\w?)", "S$1E$2 of $3"]
        - name: re_replace
          args: ["(?i)[CС]езоны?[\\s:]*(\\d+(?:-\\d+)?).+?(\\d+(?:-\\d+)?)\\s*из\\s*(\\w?)(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))?", "S$1E$2 of $3"]
        - name: re_replace
          args: ["(?i)[CС]езоны?[\\s:]*(\\d+(?:-\\d+)?).+?(\\d+(?:-\\d+)?)\\s*(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))\\s+из\\s*(\\w?)", "S$1E$2 of $3"]
        - name: re_replace
          args: ["(?i)[CС]езоны?[\\s:]*(\\d+(?:-\\d+)?).+?(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))[\\s:]*(\\d+(?:-\\d+)?)", "S$1E$2"]
        - name: re_replace
          args: ["(?i)(\\d+(?:-\\d+)?)\\s*[CС]езоны?.+?(\\d+(?:-\\d+)?)(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))", "S$1E$2"]
        - name: re_replace
          args: ["(?i)[CС]езоны?[\\s:]*(\\d+(?:-\\d+)?).+?(\\d+(?:-\\d+)?)(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))", "S$1E$2"]
        - name: re_replace
          args: ["(?i)[CС]езоны?[\\s:]*(\\d+(?:-\\d+)?)", "S$1"]
        - name: re_replace
          args: ["(?i)(\\d+(?:-\\d+)?)\\s+[CС]езоны?", "S$1"]
        - name: re_replace
          args: ["(?i)(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))[\\s:]*(\\d+(?:-\\d+)?)\\s*из\\s*(\\w?)", "E$1 of $2"]
        - name: re_replace
          args: ["(?i)(\\d+(?:-\\d+)?)\\s*из\\s*(\\w?)(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))", "E$1 of $2"]
        - name: re_replace
          args: ["(?i)(\\d+(?:-\\d+)?)\\s+(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))\\s+из\\s*(\\w?)", "E$1 of $2"]
        - name: re_replace
          args: ["(?i)(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))[\\s:]*(\\d+(?:-\\d+)?)", "E$1"]
        - name: re_replace
          args: ["(?i)(\\d+(?:-\\d+)?)\\s+(?:\\s*(?:[CС]ери[ияй]|Эпизод|Выпуски?))", "E$1"]
        - name: re_replace
          args: ["(?i)\\bFiles-х\\b", "Files-x"]
        - name: re_replace
          args: ["(?i)\\sот\\s([\\w\\p{P}\\p{S}]+)$", "-$1"]
        - name: re_replace
          args: ["\\s\\|\\s(\\w{4,})$", "-$1"]
        - name: re_replace
          args: ["(\\([\\p{IsCyrillic}\\W]+\\))|(^[\\p{IsCyrillic}\\W\\d]+\\/ )|([\\p{IsCyrillic} \\-]+,+)|([\\p{IsCyrillic}]+)", "{{ if .Config.stripcyrillic }}{{ else }}$1$2$3$4{{ end }}"]
        - name: re_replace
          args: ["(?i)\\bHDTV[-\\s]?Rip\\b", "HDTV"]
        - name: re_replace
          args: ["(?i)\\bSAT[-\\s]?Rip\\b", "HDTV"]
        - name: re_replace
          args: ["(?i)\\bWEB[-\\s]?DL[-\\s]?Rip\\b", "WEB-DL"]
        - name: re_replace
          args: ["(?i)\\bWEB\\sRip\\b", "WEBRip"]
        - name: re_replace
          args: ["(?i)\\bWEB\\sDL\\b", "WEB-DL"]
        - name: re_replace
          args: ["[\\[\\(\\{<«][\\s\\W]*[\\]\\)\\}>»]", ""]
        - name: re_replace
          args: ["^[\\s&,\\.!\\?\\+\\-_\\|\\/':]+", ""]
        - name: re_replace
          args: ["(?i)^\\(\\s*([SE]\\d+.*?)\\s*\\)[\\s\\/\\|]*(.+)", "$2 $1"]
        - name: append
          args: "{{ if .Config.addrussiantotitle }} RUS{{ else }}{{ end }}"
    details:
      selector: a[href^="details.php?id="]
      attribute: href
    download:
      selector: a[href^="details.php?id="]
      attribute: href
      filters:
        - name: replace
          args: ["details", "download"]
    poster:
      selector: img.s
      attribute: src
    imdbid:
      selector: a[href^="browse.php?imdb="]
      attribute: href
      filters:
        - name: querystring
          args: imdb
    size:
      selector: td:nth-child(4)
    seeders:
      selector: span[title="Раздают"]
    leechers:
      selector: span[title="Качают"]
    date_day:
      # Сегодня в 18:22
      # Вчера в 20:52
      selector: a[href^="browse.php?date="]:contains("Сегодня"), a[href^="browse.php?date="]:contains("Вчера")
      optional: true
      filters:
        - name: regexp
          args: "((Вчера в|Сегодня в)( \\d{2}:\\d{2}))"
        - name: replace
          args: ["Сегодня в", "Today"]
        - name: replace
          args: ["Вчера в", "Yesterday"]
        - name: fuzzytime
    date_year:
      # 23:48 24/07
      selector: a[href^="browse.php?date="]:contains("/")
      optional: true
      filters:
        - name: regexp
          args: "(\\d{2}:\\d{2} \\d{2}/\\d{2})"
        - name: append
          args: " +03:00" # MSK
        - name: dateparse
          args: "HH:mm dd/MM zzz"
    date:
      text: "{{ if or .Result.date_year .Result.date_day }}{{ or .Result.date_year .Result.date_day }}{{ else }}now{{ end }}"
    downloadvolumefactor:
      case:
        img[src="/pic/freedownload.gif"]: 0
        "*": 1
    uploadvolumefactor:
      text: 1
    minimumratio:
      text: 1.0
    description:
      selector: a[href*="?tag="]
      attribute: title
# engine n/a
