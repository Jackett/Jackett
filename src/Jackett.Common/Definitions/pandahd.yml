---
id: pandahd-api
name: PandaHD (API)
description: "PandaHD is a Private Torrent Tracker for ASIAN content"
language: en-US
type: private
encoding: UTF-8
links:
  - https://pandahd.cc/

caps:
  categorymappings:
    - {id: 1, cat: Movies, desc: "Movies"}
    - {id: 2, cat: TV, desc: "TV"}
    - {id: 3, cat: Audio, desc: "Music"}
    - {id: 4, cat: Console, desc: "Game"}
    - {id: 5, cat: Movies/Other, desc: "Anime Movies"}
    - {id: 6, cat: TV, desc: "Anime Series"}
    - {id: 7, cat: Books, desc: "Book"}
    - {id: 8, cat: TV, desc: "TS Firehose (TV)"}
    - {id: 9, cat: Movies, desc: "TS Firehose (Movies)"}

  modes:
    search: [q]
    tv-search: [q, season, ep, imdbid, tvdbid, tmdbid]
    movie-search: [q, imdbid, tmdbid]
    music-search: [q]
    book-search: [q]

settings:
  - name: apikey
    type: text
    label: APIKey
  - name: info_key
    type: info
    label: About your API key
    default: "Find or Generate a new API Token by accessing your <a href=\"https://pandahd.cc/\" target=\"_blank\">PandaHD</a> account <i>My Security</i> page and clicking on the <b>API Token</b> tab."
  - name: freeleech
    type: checkbox
    label: Search freeleech only
    default: false
  - name: sort
    type: select
    label: Sort requested from site
    default: created_at
    options:
      created_at: created
      seeders: seeders
      size: size
      name: title
  - name: type
    type: select
    label: Order requested from site
    default: desc
    options:
      desc: desc
      asc: asc

login:
  path: /api/torrents
  method: get
  error:
    - selector: a[href*="/login"]
      message:
        text: "The API key was not accepted by {{ .Config.sitelink }}."
    - selector: :root:contains("Account is Banned")

search:
  paths:
    - path: api/torrents/filter
      response:
        type: json

  headers:
    Authorization: ["Bearer {{ .Config.apikey }}"]

  inputs:
    $raw: "{{ range .Categories }}&categories[]={{.}}{{end}}"
    name: "{{ .Keywords }}"
    imdbId: "{{ .Query.IMDBIDShort }}"
    tmdbId: "{{ .Query.TMDBID }}"
    tvdbId: "{{ .Query.TVDBID }}"
    free: "{{ if .Config.freeleech }}1{{ else }}{{ end }}"
    sortField: "{{ .Config.sort }}"
    sortDirection: "{{ .Config.type }}"
    perPage: 100

  keywordsfilters:
    - name: re_replace
      args: ["\\.", " "]

  rows:
    selector: data
    attribute: attributes

  fields:
    categorydesc:
      selector: category
    title:
      selector: name
    details:
      selector: details_link
    download:
      selector: download_link
    poster:
      selector: poster
      filters:
        - name: replace
          args: ["https://via.placeholder.com/90x135", ""]
    imdbid:
      selector: imdb_id
    tmdbid:
      selector: tmdb_id
    tvdbid:
      selector: tvdb_id
    files:
      selector: num_file
    seeders:
      selector: seeders
    leechers:
      selector: leechers
    grabs:
      selector: times_completed
    date:
      # "created_at": "2021-10-18T00:34:50.000000Z" is returned by Newtonsoft.Json.Linq as 18/10/2021 00:34:50
      selector: created_at
      filters:
        - name: append
          args: " +00:00" # GMT
        - name: dateparse
          args: "MM/dd/yyyy HH:mm:ss zzz"
    size:
      selector: size
    downloadvolumefactor:
      # api returns 0=false, 1=true
      selector: freeleech
      case:
        0: 1 # not free
        1: 0 # freeleech
    uploadvolumefactor:
      # api returns 0=false, 1=true
      selector: double_upload
      case:
        0: 1 # normal
        1: 2 # double
    minimumratio:
      text: 0.4
#    minimumseedtime:
#      # 7 days (as seconds = 7 x 24 x 60 x 60)
#      text: 604800
# json UNIT3D 5.3.0
