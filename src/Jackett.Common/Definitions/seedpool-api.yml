---
id: seedpool-api
name: seedpool (API)
description: "seedpool is a Private Torrent Tracker for 0-day MOVIES / TV / GENERAL"
language: en-US
type: private
encoding: UTF-8
links:
  - https://seedpool.org/

caps:
  categorymappings:
    - {id: 2, cat: TV, desc: "TV Show"}
    - {id: 1, cat: Movies, desc: "Movie"}
    - {id: 10, cat: Movies/UHD, desc: "4K Movie"}
    - {id: 13, cat: TV, desc: "TV Boxsets"}
    - {id: 12, cat: PC/Games, desc: "Linux Game"}
    - {id: 3, cat: PC/Games, desc: "PC Game"}
    - {id: 5, cat: Audio/Lossless, desc: "Music"}
    - {id: 6, cat: TV/Anime, desc: "Anime"}
    - {id: 4, cat: Console/Other, desc: "NSW Game"}
    - {id: 8, cat: TV/Sport, desc: "Sports"}
    - {id: 7, cat: Books/EBook, desc: "E-Books"}
    - {id: 9, cat: Audio/Audiobook, desc: "Audiobook"}
    - {id: 15, cat: Other, desc: "Education"}
    - {id: 16, cat: PC/0day, desc: "Windows"}
    - {id: 17, cat: PC, desc: "Linux"}
    - {id: 18, cat: PC/Mac, desc: "macOS"}
    - {id: 14, cat: Console/PS4, desc: "PS4"}
    - {id: 19, cat: Console/XBox, desc: "Xbox"}
    - {id: 11, cat: Other, desc: "Other"}

  modes:
    search: [q]
    tv-search: [q, season, ep, tmdbid]
    movie-search: [q, tmdbid]
    music-search: [q]
    book-search: [q]

settings:
  - name: apikey
    type: text
    label: APIKey
  - name: info_key
    type: info
    label: About your API key
    default: "Find or Generate a new API Token by accessing your <a href=\"https://seedpool.org/\" target=\"_blank\">seedpool</a> account <i>My Settings</i> page and clicking on the <b>API Key</b> tab."
  - name: freeleech
    type: checkbox
    label: Search freeleech only
    default: false
  - name: single_file_release_use_filename
    type: checkbox
    label: Use filename as title for single file releases
    default: true
  - name: sort
    type: select
    label: Sort requested from site
    default: created_at
    options:
      created_at: created
      seeders: seeders
      size: size
      name: title
  - name: type
    type: select
    label: Order requested from site
    default: desc
    options:
      desc: desc
      asc: asc

login:
  path: /api/torrents
  method: get
  error:
    - selector: a[href*="/login"]
      message:
        text: "The API key was not accepted by {{ .Config.sitelink }}."
    - selector: :root:contains("Account is Banned")

search:
  paths:
    # https://github.com/HDInnovations/UNIT3D-Community-Edition/wiki/Torrent-API-(UNIT3D-v8.x.x)
    # https://github.com/HDInnovations/UNIT3D-Community-Edition/blob/master/app/Http/Controllers/API/TorrentController.php#L476
    - path: "/api/torrents/filter"
      response:
        type: json

  headers:
    Authorization: ["Bearer {{ .Config.apikey }}"]

  inputs:
  # if we have an id based search, add Season and Episode as query in name for UNIT3D < v6.  Else pass S/E Params for UNIT3D >= v6
    $raw: "{{ range .Categories }}&categories[]={{.}}{{end}}"
    name: "{{ .Keywords }}"
    seasonNumber: "{{ .Query.Season }}"
    episodeNumber: "{{ .Query.Ep }}"
    tmdbId: "{{ .Query.TMDBID }}"
    "free[]": "{{ if .Config.freeleech }}100{{ else }}{{ end }}"
    sortField: "{{ .Config.sort }}"
    sortDirection: "{{ .Config.type }}"
    perPage: 100

  keywordsfilters:
    - name: re_replace
      args: ["\\.", " "]

  rows:
    selector: data
    attribute: attributes

  fields:
    category:
      selector: category_id
    title_optional:
      selector: name
    title_filename:
      selector: "files[0].name"
      optional: true
    files:
      selector: num_file
    title:
      text: "{{ if and (.Config.single_file_release_use_filename) (eq .Result.files \"1\") (.Result.title_filename) }}{{ .Result.title_filename }}{{ else }}{{ .Result.title_optional }}{{ end }}"
    details:
      selector: details_link
    download:
      selector: download_link
    infohash:
      selector: info_hash
    poster:
      selector: meta.poster
      filters:
        - name: replace
          args: ["https://via.placeholder.com/90x135", ""]
    tmdbid:
      selector: tmdb_id
    genre:
      selector: meta.genres
      filters:
        - name: re_replace
          args: ["(?i)(Science Fiction)", "Science_Fiction"]
        - name: re_replace
          args: ["(?i)(TV Movie)", "TV_Movie"]
        - name: replace
          args: [" & ", "_&_"]
    description:
      text: "{{ .Result.genre }}"
    seeders:
      selector: seeders
    leechers:
      selector: leechers
    grabs:
      selector: times_completed
    date:
      # "created_at": "2021-10-18T00:34:50.000000Z" is returned by Newtonsoft.Json.Linq as 18/10/2021 00:34:50
      selector: created_at
      filters:
        - name: append
          args: " +00:00" # GMT
        - name: dateparse
          args: "MM/dd/yyyy HH:mm:ss zzz"
    size:
      selector: size
    _featured:
      selector: featured
      case:
        False: "{{ .False }}"
        True: "{{ .True }}"
    downloadvolumefactor_freeleech:
      # api returns 0%, 25%, 50%, 75%, 100%
      selector: freeleech
      case:
        0%: 1 # not free
        25%: 0.75
        50%: 0.5
        75%: 0.25
        100%: 0 # freeleech
        "*": 0 # catch errors
    downloadvolumefactor:
      text: "{{ if .Result._featured }}0{{ else }}{{ .Result.downloadvolumefactor_freeleech }}{{ end }}"
    uploadvolumefactor_double_upload:
      # api returns False, True
      selector: double_upload
      case:
        False: 1 # normal
        True: 2 # double
    uploadvolumefactor:
      text: "{{ if .Result._featured }}2{{ else }}{{ .Result.uploadvolumefactor_double_upload }}{{ end }}"
# global MR is 1.0 but torrents must be seeded for 10 days regardless of ratio
#    minimumratio:
#      text: 1.0
    minimumseedtime:
      # 10 days (as seconds = 10 x 24 x 60 x 60)
      text: 864000
# json UNIT3D 8.3.6 (custom)
